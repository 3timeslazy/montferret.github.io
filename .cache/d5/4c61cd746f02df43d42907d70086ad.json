{"id":"Mhwh","dependencies":[{"name":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/package.json","includedInParent":true,"mtime":1560032204853},{"name":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/package.json","includedInParent":true,"mtime":1560032193347},{"name":"./platform","loc":{"line":38,"column":25},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","resolved":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/platform.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar platform_1 = require(\"./platform\");\nvar Go = /** @class */ (function () {\n    function Go() {\n        var _this = this;\n        this.platform = new platform_1.Platform();\n        this.argv = ['js'];\n        this.env = {};\n        this.exited = false;\n        this.exit = function (code) {\n            if (code !== 0) {\n                console.warn('exit code:', code);\n            }\n        };\n        this._resolveExitPromise = function () { };\n        this._exitPromise = new Promise(function (resolve) {\n            _this._resolveExitPromise = resolve;\n        });\n        this._scheduledTimeouts = new Map();\n        this._nextCallbackTimeoutID = 1;\n        var mem = function () {\n            // The buffer may change when requesting more memory.\n            return new DataView(_this._inst.exports.mem.buffer);\n        };\n        var setInt64 = function (addr, v) {\n            mem().setUint32(addr + 0, v, true);\n            mem().setUint32(addr + 4, Math.floor(v / 4294967296), true);\n        };\n        var getInt64 = function (addr) {\n            var low = mem().getUint32(addr + 0, true);\n            var high = mem().getInt32(addr + 4, true);\n            return low + high * 4294967296;\n        };\n        var loadValue = function (addr) {\n            var f = mem().getFloat64(addr, true);\n            if (f === 0) {\n                return undefined;\n            }\n            if (!isNaN(f)) {\n                return f;\n            }\n            var id = mem().getUint32(addr, true);\n            return _this._values[id];\n        };\n        var storeValue = function (addr, v) {\n            var nanHead = 0x7ff80000;\n            if (typeof v === 'number') {\n                if (isNaN(v)) {\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 0, true);\n                    return;\n                }\n                if (v === 0) {\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 1, true);\n                    return;\n                }\n                mem().setFloat64(addr, v, true);\n                return;\n            }\n            switch (v) {\n                case undefined:\n                    mem().setFloat64(addr, 0, true);\n                    return;\n                case null:\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 2, true);\n                    return;\n                case true:\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 3, true);\n                    return;\n                case false:\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 4, true);\n                    return;\n            }\n            var ref = _this._refs.get(v);\n            if (ref === undefined) {\n                ref = _this._values.length;\n                _this._values.push(v);\n                _this._refs.set(v, ref);\n            }\n            var typeFlag = 0;\n            switch (typeof v) {\n                case 'string':\n                    typeFlag = 1;\n                    break;\n                case 'symbol':\n                    typeFlag = 2;\n                    break;\n                case 'function':\n                    typeFlag = 3;\n                    break;\n            }\n            mem().setUint32(addr + 4, nanHead | typeFlag, true);\n            mem().setUint32(addr, ref, true);\n        };\n        var loadSlice = function (addr) {\n            var array = getInt64(addr + 0);\n            var len = getInt64(addr + 8);\n            return new Uint8Array(_this._inst.exports.mem.buffer, array, len);\n        };\n        var loadSliceOfValues = function (addr) {\n            var array = getInt64(addr + 0);\n            var len = getInt64(addr + 8);\n            var a = new Array(len);\n            for (var i = 0; i < len; i++) {\n                a[i] = loadValue(array + i * 8);\n            }\n            return a;\n        };\n        var loadString = function (addr) {\n            var saddr = getInt64(addr + 0);\n            var len = getInt64(addr + 8);\n            return _this.platform.decoder.decode(new DataView(_this._inst.exports.mem.buffer, saddr, len));\n        };\n        var timeOrigin = Date.now() - this.platform.performance.now();\n        this.importObject = {\n            go: {\n                // Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n                // may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n                // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n                // This changes the SP, thus we have to update the SP used by the imported function.\n                // func wasmExit(code int32)\n                'runtime.wasmExit': function (sp) {\n                    var code = mem().getInt32(sp + 8, true);\n                    _this.exited = true;\n                    delete _this._inst;\n                    delete _this._values;\n                    delete _this._refs;\n                    _this.exit(code);\n                },\n                // func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n                'runtime.wasmWrite': function (sp) {\n                    var fd = getInt64(sp + 8);\n                    var p = getInt64(sp + 16);\n                    var n = mem().getInt32(sp + 24, true);\n                    _this.platform.fs.writeSync(fd, new Uint8Array(_this._inst.exports.mem.buffer, p, n));\n                },\n                // func nanotime() int64\n                'runtime.nanotime': function (sp) {\n                    setInt64(sp + 8, (timeOrigin + _this.platform.performance.now()) *\n                        1000000);\n                },\n                // func walltime() (sec int64, nsec int32)\n                'runtime.walltime': function (sp) {\n                    var msec = new Date().getTime();\n                    setInt64(sp + 8, msec / 1000);\n                    mem().setInt32(sp + 16, (msec % 1000) * 1000000, true);\n                },\n                // func scheduleTimeoutEvent(delay int64) int32\n                'runtime.scheduleTimeoutEvent': function (sp) {\n                    var id = _this._nextCallbackTimeoutID;\n                    _this._nextCallbackTimeoutID++;\n                    _this._scheduledTimeouts.set(id, setTimeout(function () {\n                        _this._resume();\n                    }, getInt64(sp + 8) + 1));\n                    mem().setInt32(sp + 16, id, true);\n                },\n                // func clearTimeoutEvent(id int32)\n                'runtime.clearTimeoutEvent': function (sp) {\n                    var id = mem().getInt32(sp + 8, true);\n                    clearTimeout(_this._scheduledTimeouts.get(id));\n                    _this._scheduledTimeouts.delete(id);\n                },\n                // func getRandomData(r []byte)\n                'runtime.getRandomData': function (sp) {\n                    _this.platform.crypto.getRandomValues(loadSlice(sp + 8));\n                },\n                // func stringVal(value string) ref\n                'syscall/js.stringVal': function (sp) {\n                    storeValue(sp + 24, loadString(sp + 8));\n                },\n                // func valueGet(v ref, p string) ref\n                'syscall/js.valueGet': function (sp) {\n                    var result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n                    sp = _this._inst.exports.getsp(); // see comment above\n                    storeValue(sp + 32, result);\n                },\n                // func valueSet(v ref, p string, x ref)\n                'syscall/js.valueSet': function (sp) {\n                    Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n                },\n                // func valueIndex(v ref, i int) ref\n                'syscall/js.valueIndex': function (sp) {\n                    storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n                },\n                // valueSetIndex(v ref, i int, x ref)\n                'syscall/js.valueSetIndex': function (sp) {\n                    Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n                },\n                // func valueCall(v ref, m string, args []ref) (ref, bool)\n                'syscall/js.valueCall': function (sp) {\n                    try {\n                        var v = loadValue(sp + 8);\n                        var m = Reflect.get(v, loadString(sp + 16));\n                        var args = loadSliceOfValues(sp + 32);\n                        var result = Reflect.apply(m, v, args);\n                        sp = _this._inst.exports.getsp(); // see comment above\n                        storeValue(sp + 56, result);\n                        mem().setUint8(sp + 64, 1);\n                    }\n                    catch (err) {\n                        storeValue(sp + 56, err);\n                        mem().setUint8(sp + 64, 0);\n                    }\n                },\n                // func valueInvoke(v ref, args []ref) (ref, bool)\n                'syscall/js.valueInvoke': function (sp) {\n                    try {\n                        var v = loadValue(sp + 8);\n                        var args = loadSliceOfValues(sp + 16);\n                        var result = Reflect.apply(v, undefined, args);\n                        sp = _this._inst.exports.getsp(); // see comment above\n                        storeValue(sp + 40, result);\n                        mem().setUint8(sp + 48, 1);\n                    }\n                    catch (err) {\n                        storeValue(sp + 40, err);\n                        mem().setUint8(sp + 48, 0);\n                    }\n                },\n                // func valueNew(v ref, args []ref) (ref, bool)\n                'syscall/js.valueNew': function (sp) {\n                    try {\n                        var v = loadValue(sp + 8);\n                        var args = loadSliceOfValues(sp + 16);\n                        var result = Reflect.construct(v, args);\n                        sp = _this._inst.exports.getsp(); // see comment above\n                        storeValue(sp + 40, result);\n                        mem().setUint8(sp + 48, 1);\n                    }\n                    catch (err) {\n                        storeValue(sp + 40, err);\n                        mem().setUint8(sp + 48, 0);\n                    }\n                },\n                // func valueLength(v ref) int\n                'syscall/js.valueLength': function (sp) {\n                    setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n                },\n                // valuePrepareString(v ref) (ref, int)\n                'syscall/js.valuePrepareString': function (sp) {\n                    var str = _this.platform.encoder.encode(String(loadValue(sp + 8)));\n                    storeValue(sp + 16, str);\n                    setInt64(sp + 24, str.length);\n                },\n                // valueLoadString(v ref, b []byte)\n                'syscall/js.valueLoadString': function (sp) {\n                    var str = loadValue(sp + 8);\n                    loadSlice(sp + 16).set(str);\n                },\n                // func valueInstanceOf(v ref, t ref) bool\n                'syscall/js.valueInstanceOf': function (sp) {\n                    mem().setUint8(sp + 24, (loadValue(sp + 8) instanceof\n                        loadValue(sp + 16)));\n                },\n                debug: function (value) {\n                    console.log(value);\n                },\n            },\n        };\n        // if (isNodeJS) {\n        // \tif (process.argv.length < 3) {\n        // \t\tprocess.stderr.write(\"usage: go_js_wasm_exec [wasm binary] [arguments]\\n\");\n        // \t\tprocess.exit(1);\n        // \t}\n        //\n        // \tthis.argv = process.argv.slice(2);\n        // \tthis.env = Object.assign({ TMPDIR: require(\"os\").tmpdir() }, process.env);\n        // \tthis.exit = process.exit;\n        // \tWebAssembly.instantiate(platform.fs.readFileSync(process.argv[2]), this.importObject).then((result) => {\n        // \t\tprocess.on(\"exit\", (code) => { // Node.js exits if no event handler is pending\n        // \t\t\tif (code === 0 && !this.exited) {\n        // \t\t\t\t// deadlock, make Go print error and stack traces\n        // \t\t\t\tthis._pendingEvent = { id: 0 };\n        // \t\t\t\tthis._resume();\n        // \t\t\t}\n        // \t\t});\n        // \t\treturn this.run(result.instance);\n        // \t}).catch((err) => {\n        // \t\tthrow err;\n        // \t});\n        // }\n    }\n    Go.prototype.run = function (instance) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mem, offset, strPtr, argc, argvPtrs, keys, argv;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._inst = instance;\n                        this._values = [\n                            // TODO: garbage collection\n                            NaN,\n                            0,\n                            null,\n                            true,\n                            false,\n                            this.platform,\n                            this._inst.exports.mem,\n                            this,\n                        ];\n                        this._refs = new Map();\n                        this.exited = false;\n                        mem = new DataView(this._inst.exports.mem.buffer);\n                        offset = 4096;\n                        strPtr = function (str) {\n                            var ptr = offset;\n                            new Uint8Array(mem.buffer, offset, str.length + 1).set(_this.platform.encoder.encode(str + '\\0'));\n                            offset += str.length + (8 - (str.length % 8));\n                            return ptr;\n                        };\n                        argc = this.argv.length;\n                        argvPtrs = [];\n                        this.argv.forEach(function (arg) {\n                            argvPtrs.push(strPtr(arg));\n                        });\n                        keys = Object.keys(this.env).sort();\n                        argvPtrs.push(keys.length);\n                        keys.forEach(function (key) {\n                            argvPtrs.push(strPtr(key + \"=\" + _this.env[key]));\n                        });\n                        argv = offset;\n                        argvPtrs.forEach(function (ptr) {\n                            mem.setUint32(offset, ptr, true);\n                            mem.setUint32(offset + 4, 0, true);\n                            offset += 8;\n                        });\n                        this._inst.exports.run(argc, argv);\n                        if (this.exited) {\n                            this._resolveExitPromise();\n                        }\n                        return [4 /*yield*/, this._exitPromise];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Go.prototype._resume = function () {\n        if (this.exited) {\n            throw new Error('Go program has already exited');\n        }\n        this._inst.exports.resume();\n        if (this.exited) {\n            this._resolveExitPromise();\n        }\n    };\n    Go.prototype._makeFuncWrapper = function (id) {\n        var _this = this;\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var event = { id: id, this: _this, args: args, result: undefined };\n            _this._pendingEvent = event;\n            _this._resume();\n            return event.result;\n        };\n    };\n    return Go;\n}());\nexports.Go = Go;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}}],"sources":{"../../node_modules/@montferret/ferret-wasm/dist/wasm_exec.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar platform_1 = require(\"./platform\");\nvar Go = /** @class */ (function () {\n    function Go() {\n        var _this = this;\n        this.platform = new platform_1.Platform();\n        this.argv = ['js'];\n        this.env = {};\n        this.exited = false;\n        this.exit = function (code) {\n            if (code !== 0) {\n                console.warn('exit code:', code);\n            }\n        };\n        this._resolveExitPromise = function () { };\n        this._exitPromise = new Promise(function (resolve) {\n            _this._resolveExitPromise = resolve;\n        });\n        this._scheduledTimeouts = new Map();\n        this._nextCallbackTimeoutID = 1;\n        var mem = function () {\n            // The buffer may change when requesting more memory.\n            return new DataView(_this._inst.exports.mem.buffer);\n        };\n        var setInt64 = function (addr, v) {\n            mem().setUint32(addr + 0, v, true);\n            mem().setUint32(addr + 4, Math.floor(v / 4294967296), true);\n        };\n        var getInt64 = function (addr) {\n            var low = mem().getUint32(addr + 0, true);\n            var high = mem().getInt32(addr + 4, true);\n            return low + high * 4294967296;\n        };\n        var loadValue = function (addr) {\n            var f = mem().getFloat64(addr, true);\n            if (f === 0) {\n                return undefined;\n            }\n            if (!isNaN(f)) {\n                return f;\n            }\n            var id = mem().getUint32(addr, true);\n            return _this._values[id];\n        };\n        var storeValue = function (addr, v) {\n            var nanHead = 0x7ff80000;\n            if (typeof v === 'number') {\n                if (isNaN(v)) {\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 0, true);\n                    return;\n                }\n                if (v === 0) {\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 1, true);\n                    return;\n                }\n                mem().setFloat64(addr, v, true);\n                return;\n            }\n            switch (v) {\n                case undefined:\n                    mem().setFloat64(addr, 0, true);\n                    return;\n                case null:\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 2, true);\n                    return;\n                case true:\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 3, true);\n                    return;\n                case false:\n                    mem().setUint32(addr + 4, nanHead, true);\n                    mem().setUint32(addr, 4, true);\n                    return;\n            }\n            var ref = _this._refs.get(v);\n            if (ref === undefined) {\n                ref = _this._values.length;\n                _this._values.push(v);\n                _this._refs.set(v, ref);\n            }\n            var typeFlag = 0;\n            switch (typeof v) {\n                case 'string':\n                    typeFlag = 1;\n                    break;\n                case 'symbol':\n                    typeFlag = 2;\n                    break;\n                case 'function':\n                    typeFlag = 3;\n                    break;\n            }\n            mem().setUint32(addr + 4, nanHead | typeFlag, true);\n            mem().setUint32(addr, ref, true);\n        };\n        var loadSlice = function (addr) {\n            var array = getInt64(addr + 0);\n            var len = getInt64(addr + 8);\n            return new Uint8Array(_this._inst.exports.mem.buffer, array, len);\n        };\n        var loadSliceOfValues = function (addr) {\n            var array = getInt64(addr + 0);\n            var len = getInt64(addr + 8);\n            var a = new Array(len);\n            for (var i = 0; i < len; i++) {\n                a[i] = loadValue(array + i * 8);\n            }\n            return a;\n        };\n        var loadString = function (addr) {\n            var saddr = getInt64(addr + 0);\n            var len = getInt64(addr + 8);\n            return _this.platform.decoder.decode(new DataView(_this._inst.exports.mem.buffer, saddr, len));\n        };\n        var timeOrigin = Date.now() - this.platform.performance.now();\n        this.importObject = {\n            go: {\n                // Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n                // may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n                // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n                // This changes the SP, thus we have to update the SP used by the imported function.\n                // func wasmExit(code int32)\n                'runtime.wasmExit': function (sp) {\n                    var code = mem().getInt32(sp + 8, true);\n                    _this.exited = true;\n                    delete _this._inst;\n                    delete _this._values;\n                    delete _this._refs;\n                    _this.exit(code);\n                },\n                // func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n                'runtime.wasmWrite': function (sp) {\n                    var fd = getInt64(sp + 8);\n                    var p = getInt64(sp + 16);\n                    var n = mem().getInt32(sp + 24, true);\n                    _this.platform.fs.writeSync(fd, new Uint8Array(_this._inst.exports.mem.buffer, p, n));\n                },\n                // func nanotime() int64\n                'runtime.nanotime': function (sp) {\n                    setInt64(sp + 8, (timeOrigin + _this.platform.performance.now()) *\n                        1000000);\n                },\n                // func walltime() (sec int64, nsec int32)\n                'runtime.walltime': function (sp) {\n                    var msec = new Date().getTime();\n                    setInt64(sp + 8, msec / 1000);\n                    mem().setInt32(sp + 16, (msec % 1000) * 1000000, true);\n                },\n                // func scheduleTimeoutEvent(delay int64) int32\n                'runtime.scheduleTimeoutEvent': function (sp) {\n                    var id = _this._nextCallbackTimeoutID;\n                    _this._nextCallbackTimeoutID++;\n                    _this._scheduledTimeouts.set(id, setTimeout(function () {\n                        _this._resume();\n                    }, getInt64(sp + 8) + 1));\n                    mem().setInt32(sp + 16, id, true);\n                },\n                // func clearTimeoutEvent(id int32)\n                'runtime.clearTimeoutEvent': function (sp) {\n                    var id = mem().getInt32(sp + 8, true);\n                    clearTimeout(_this._scheduledTimeouts.get(id));\n                    _this._scheduledTimeouts.delete(id);\n                },\n                // func getRandomData(r []byte)\n                'runtime.getRandomData': function (sp) {\n                    _this.platform.crypto.getRandomValues(loadSlice(sp + 8));\n                },\n                // func stringVal(value string) ref\n                'syscall/js.stringVal': function (sp) {\n                    storeValue(sp + 24, loadString(sp + 8));\n                },\n                // func valueGet(v ref, p string) ref\n                'syscall/js.valueGet': function (sp) {\n                    var result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n                    sp = _this._inst.exports.getsp(); // see comment above\n                    storeValue(sp + 32, result);\n                },\n                // func valueSet(v ref, p string, x ref)\n                'syscall/js.valueSet': function (sp) {\n                    Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n                },\n                // func valueIndex(v ref, i int) ref\n                'syscall/js.valueIndex': function (sp) {\n                    storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n                },\n                // valueSetIndex(v ref, i int, x ref)\n                'syscall/js.valueSetIndex': function (sp) {\n                    Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n                },\n                // func valueCall(v ref, m string, args []ref) (ref, bool)\n                'syscall/js.valueCall': function (sp) {\n                    try {\n                        var v = loadValue(sp + 8);\n                        var m = Reflect.get(v, loadString(sp + 16));\n                        var args = loadSliceOfValues(sp + 32);\n                        var result = Reflect.apply(m, v, args);\n                        sp = _this._inst.exports.getsp(); // see comment above\n                        storeValue(sp + 56, result);\n                        mem().setUint8(sp + 64, 1);\n                    }\n                    catch (err) {\n                        storeValue(sp + 56, err);\n                        mem().setUint8(sp + 64, 0);\n                    }\n                },\n                // func valueInvoke(v ref, args []ref) (ref, bool)\n                'syscall/js.valueInvoke': function (sp) {\n                    try {\n                        var v = loadValue(sp + 8);\n                        var args = loadSliceOfValues(sp + 16);\n                        var result = Reflect.apply(v, undefined, args);\n                        sp = _this._inst.exports.getsp(); // see comment above\n                        storeValue(sp + 40, result);\n                        mem().setUint8(sp + 48, 1);\n                    }\n                    catch (err) {\n                        storeValue(sp + 40, err);\n                        mem().setUint8(sp + 48, 0);\n                    }\n                },\n                // func valueNew(v ref, args []ref) (ref, bool)\n                'syscall/js.valueNew': function (sp) {\n                    try {\n                        var v = loadValue(sp + 8);\n                        var args = loadSliceOfValues(sp + 16);\n                        var result = Reflect.construct(v, args);\n                        sp = _this._inst.exports.getsp(); // see comment above\n                        storeValue(sp + 40, result);\n                        mem().setUint8(sp + 48, 1);\n                    }\n                    catch (err) {\n                        storeValue(sp + 40, err);\n                        mem().setUint8(sp + 48, 0);\n                    }\n                },\n                // func valueLength(v ref) int\n                'syscall/js.valueLength': function (sp) {\n                    setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n                },\n                // valuePrepareString(v ref) (ref, int)\n                'syscall/js.valuePrepareString': function (sp) {\n                    var str = _this.platform.encoder.encode(String(loadValue(sp + 8)));\n                    storeValue(sp + 16, str);\n                    setInt64(sp + 24, str.length);\n                },\n                // valueLoadString(v ref, b []byte)\n                'syscall/js.valueLoadString': function (sp) {\n                    var str = loadValue(sp + 8);\n                    loadSlice(sp + 16).set(str);\n                },\n                // func valueInstanceOf(v ref, t ref) bool\n                'syscall/js.valueInstanceOf': function (sp) {\n                    mem().setUint8(sp + 24, (loadValue(sp + 8) instanceof\n                        loadValue(sp + 16)));\n                },\n                debug: function (value) {\n                    console.log(value);\n                },\n            },\n        };\n        // if (isNodeJS) {\n        // \tif (process.argv.length < 3) {\n        // \t\tprocess.stderr.write(\"usage: go_js_wasm_exec [wasm binary] [arguments]\\n\");\n        // \t\tprocess.exit(1);\n        // \t}\n        //\n        // \tthis.argv = process.argv.slice(2);\n        // \tthis.env = Object.assign({ TMPDIR: require(\"os\").tmpdir() }, process.env);\n        // \tthis.exit = process.exit;\n        // \tWebAssembly.instantiate(platform.fs.readFileSync(process.argv[2]), this.importObject).then((result) => {\n        // \t\tprocess.on(\"exit\", (code) => { // Node.js exits if no event handler is pending\n        // \t\t\tif (code === 0 && !this.exited) {\n        // \t\t\t\t// deadlock, make Go print error and stack traces\n        // \t\t\t\tthis._pendingEvent = { id: 0 };\n        // \t\t\t\tthis._resume();\n        // \t\t\t}\n        // \t\t});\n        // \t\treturn this.run(result.instance);\n        // \t}).catch((err) => {\n        // \t\tthrow err;\n        // \t});\n        // }\n    }\n    Go.prototype.run = function (instance) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mem, offset, strPtr, argc, argvPtrs, keys, argv;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._inst = instance;\n                        this._values = [\n                            // TODO: garbage collection\n                            NaN,\n                            0,\n                            null,\n                            true,\n                            false,\n                            this.platform,\n                            this._inst.exports.mem,\n                            this,\n                        ];\n                        this._refs = new Map();\n                        this.exited = false;\n                        mem = new DataView(this._inst.exports.mem.buffer);\n                        offset = 4096;\n                        strPtr = function (str) {\n                            var ptr = offset;\n                            new Uint8Array(mem.buffer, offset, str.length + 1).set(_this.platform.encoder.encode(str + '\\0'));\n                            offset += str.length + (8 - (str.length % 8));\n                            return ptr;\n                        };\n                        argc = this.argv.length;\n                        argvPtrs = [];\n                        this.argv.forEach(function (arg) {\n                            argvPtrs.push(strPtr(arg));\n                        });\n                        keys = Object.keys(this.env).sort();\n                        argvPtrs.push(keys.length);\n                        keys.forEach(function (key) {\n                            argvPtrs.push(strPtr(key + \"=\" + _this.env[key]));\n                        });\n                        argv = offset;\n                        argvPtrs.forEach(function (ptr) {\n                            mem.setUint32(offset, ptr, true);\n                            mem.setUint32(offset + 4, 0, true);\n                            offset += 8;\n                        });\n                        this._inst.exports.run(argc, argv);\n                        if (this.exited) {\n                            this._resolveExitPromise();\n                        }\n                        return [4 /*yield*/, this._exitPromise];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Go.prototype._resume = function () {\n        if (this.exited) {\n            throw new Error('Go program has already exited');\n        }\n        this._inst.exports.resume();\n        if (this.exited) {\n            this._resolveExitPromise();\n        }\n    };\n    Go.prototype._makeFuncWrapper = function (id) {\n        var _this = this;\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var event = { id: id, this: _this, args: args, result: undefined };\n            _this._pendingEvent = event;\n            _this._resume();\n            return event.result;\n        };\n    };\n    return Go;\n}());\nexports.Go = Go;\n"},"lineCount":405}},"error":null,"hash":"82d764f73832e3d455c07568ca03453b","cacheData":{"env":{}}}