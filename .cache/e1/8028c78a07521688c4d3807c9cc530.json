{"id":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","dependencies":[{"name":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/package.json","includedInParent":true,"mtime":1560032204853},{"name":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/package.json","includedInParent":true,"mtime":1560032193347},{"name":"./is-node","loc":{"line":6,"column":40},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/platform.js","resolved":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/is-node.js"},{"name":"fs","loc":{"line":77,"column":29},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/platform.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"crypto","loc":{"line":78,"column":39},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/platform.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/crypto-browserify/index.js"},{"name":"util","loc":{"line":91,"column":31},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/platform.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/util/util.js"},{"name":"web-streams-polyfill/dist/ponyfill","loc":{"line":94,"column":39},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/platform.js","resolved":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/web-streams-polyfill/dist/ponyfill.js"},{"name":"cross-fetch/dist/node-ponyfill","loc":{"line":101,"column":34},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/platform.js","resolved":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/cross-fetch/dist/node-ponyfill.js"},{"name":"process","parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/platform.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/process/browser.js"}],"generated":{"js":"var global = arguments[3];\nvar process = require(\"process\");\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_node_1 = __importDefault(require(\"./is-node\"));\nvar Platform = /** @class */ (function () {\n    function Platform(encoding) {\n        var _this = this;\n        if (encoding === void 0) { encoding = 'utf-8'; }\n        var env = (is_node_1.default ? global : window);\n        this.Array = env.Array;\n        this.ArrayBuffer = env.ArrayBuffer;\n        this.Boolean = env.Boolean;\n        this.Buffer = env.Buffer;\n        this.DataView = env.DataView;\n        this.Date = env.Date;\n        this.Error = env.Error;\n        this.EvalError = env.EvalError;\n        this.Float32Array = env.Float32Array;\n        this.Float64Array = env.Float64Array;\n        this.Function = env.Function;\n        this.GLOBAL = this;\n        this.Infinity = env.Infinity;\n        this.Int8Array = env.Int8Array;\n        this.Int16Array = env.Int16Array;\n        this.Int32Array = env.Int32Array;\n        this.Intl = env.Intl;\n        this.JSON = env.JSON;\n        this.Map = env.Map;\n        this.Math = env.Math;\n        this.NaN = env.NaN;\n        this.Number = env.Number;\n        this.Object = env.Object;\n        this.Promise = env.Promise;\n        this.RangeError = env.RangeError;\n        this.ReferenceError = env.ReferenceError;\n        this.RegExp = env.RegExp;\n        this.Set = env.Set;\n        this.String = env.String;\n        this.Symbol = env.Symbol;\n        this.SyntaxError = env.SyntaxError;\n        this.TypeError = env.TypeError;\n        this.URIError = env.URIError;\n        this.Uint8Array = env.Uint8Array;\n        this.Uint8ClampedArray = env.Uint8ClampedArray;\n        this.Uint16Array = env.Uint16Array;\n        this.Uint32Array = env.Uint32Array;\n        this.WeakMap = env.WeakMap;\n        this.WeakSet = env.WeakSet;\n        this.clearImmediate = env.clearImmediate;\n        this.clearInterval = env.clearInterval;\n        this.clearTimeout = env.clearTimeout;\n        this.console = env.console;\n        this.decodeURI = env.decodeURI;\n        this.decodeURIComponent = env.decodeURIComponent;\n        this.encodeURI = env.encodeURI;\n        this.encodeURIComponent = env.encodeURIComponent;\n        this.escape = env.escape;\n        this.eval = env.eval;\n        this.gc = is_node_1.default ? env.gc : function () { };\n        this.global = this;\n        this.isFinite = env.isFinite;\n        this.isNaN = env.isNaN;\n        this.parseFloat = env.parseFloat;\n        this.parseInt = env.parseInt;\n        this.process = env.process;\n        this.queueMicrotask = env.queueMicrotask;\n        this.root = this;\n        this.setImmediate = env.setImmediate;\n        this.setInterval = env.setInterval;\n        this.setTimeout = env.setTimeout;\n        this.undefined = env.undefined;\n        this.unescape = env.unescape;\n        this.v8debug = env.v8debug;\n        if (is_node_1.default) {\n            var fs = require('fs');\n            var nodeCrypto_1 = require('crypto');\n            this.fs = fs;\n            this.crypto = {\n                getRandomValues: function (b) {\n                    nodeCrypto_1.randomFillSync(b);\n                },\n            };\n            this.performance = {\n                now: function () {\n                    var _a = process.hrtime(), sec = _a[0], nsec = _a[1];\n                    return sec * 1000 + nsec / 1000000;\n                },\n            };\n            var util = require('util');\n            this.encoder = new util.TextEncoder(encoding);\n            this.decoder = new util.TextDecoder(encoding);\n            var webStreams_1 = require('web-streams-polyfill/dist/ponyfill');\n            this['ReadableStream'] = webStreams_1.ReadableStream;\n            this['WritableStream'] = webStreams_1.WritableStream;\n            this['ByteLengthQueuingStrategy'] =\n                webStreams_1.ByteLengthQueuingStrategy;\n            this['CountQueuingStrategy'] = webStreams_1.CountQueuingStrategy;\n            this['TransformStream'] = webStreams_1.TransformStream;\n            var fetch_1 = require('cross-fetch/dist/node-ponyfill');\n            this['fetch'] = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return fetch_1.apply(void 0, args).then(function (res) {\n                    var body = res.body;\n                    body.getReader = function () {\n                        var stream = new webStreams_1.ReadableStream({\n                            start: function (controller) {\n                                res.body.on('data', function (chunk) {\n                                    controller.enqueue(chunk);\n                                });\n                                res.body.on('end', function () {\n                                    controller.close();\n                                });\n                                // res.body.on('close', () => {\n                                //     controller.close();\n                                // });\n                                res.body.on('error', function (err) {\n                                    controller.error(err);\n                                });\n                            },\n                        });\n                        return stream.getReader();\n                    };\n                    return res;\n                });\n            };\n            this['Headers'] = fetch_1.Headers;\n            this['Request'] = fetch_1.Request;\n            this['Response'] = fetch_1.Response;\n        }\n        else {\n            var outputBuf_1 = '';\n            var platform_1 = this;\n            this.fs = {\n                constants: {\n                    O_WRONLY: -1,\n                    O_RDWR: -1,\n                    O_CREAT: -1,\n                    O_TRUNC: -1,\n                    O_APPEND: -1,\n                    O_EXCL: -1,\n                },\n                writeSync: function (fd, buf) {\n                    outputBuf_1 += platform_1.decoder.decode(buf);\n                    var nl = outputBuf_1.lastIndexOf('\\n');\n                    if (nl != -1) {\n                        console.log(outputBuf_1.substr(0, nl));\n                        outputBuf_1 = outputBuf_1.substr(nl + 1);\n                    }\n                    return buf.length;\n                },\n                write: function (fd, buf, offset, length, position, callback) {\n                    if (offset !== 0 ||\n                        length !== buf.length ||\n                        position !== null) {\n                        throw new Error('not implemented');\n                    }\n                    var n = this.writeSync(fd, buf);\n                    callback(null, n);\n                },\n                open: function (path, flags, mode, callback) {\n                    var err = new Error('not implemented');\n                    err.code = 'ENOSYS';\n                    callback(err);\n                },\n                read: function (fd, buffer, offset, length, position, callback) {\n                    var err = new Error('not implemented');\n                    err.code = 'ENOSYS';\n                    callback(err);\n                },\n                fsync: function (fd, callback) {\n                    callback(null);\n                },\n            };\n            this.crypto = window.crypto;\n            this.performance = window.performance;\n            this.encoder = new window.TextEncoder(encoding);\n            this.decoder = new window.TextDecoder(encoding);\n            var obj = window;\n            do\n                Object.getOwnPropertyNames(obj).forEach(function (key) {\n                    // skip already defined keys\n                    if (_this[key] != null) {\n                        return;\n                    }\n                    var value = env[key];\n                    // skip leaking env object\n                    if (value === env) {\n                        return;\n                    }\n                    if (key[0].toLowerCase() === key[0]) {\n                        if (typeof value === 'function') {\n                            value = value.bind(env);\n                        }\n                    }\n                    _this[key] = value;\n                });\n            while (obj == Object.getPrototypeOf(obj));\n        }\n    }\n    return Platform;\n}());\nexports.Platform = Platform;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/platform.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}}],"sources":{"../../node_modules/@montferret/ferret-wasm/dist/platform.js":"\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_node_1 = __importDefault(require(\"./is-node\"));\nvar Platform = /** @class */ (function () {\n    function Platform(encoding) {\n        var _this = this;\n        if (encoding === void 0) { encoding = 'utf-8'; }\n        var env = (is_node_1.default ? global : window);\n        this.Array = env.Array;\n        this.ArrayBuffer = env.ArrayBuffer;\n        this.Boolean = env.Boolean;\n        this.Buffer = env.Buffer;\n        this.DataView = env.DataView;\n        this.Date = env.Date;\n        this.Error = env.Error;\n        this.EvalError = env.EvalError;\n        this.Float32Array = env.Float32Array;\n        this.Float64Array = env.Float64Array;\n        this.Function = env.Function;\n        this.GLOBAL = this;\n        this.Infinity = env.Infinity;\n        this.Int8Array = env.Int8Array;\n        this.Int16Array = env.Int16Array;\n        this.Int32Array = env.Int32Array;\n        this.Intl = env.Intl;\n        this.JSON = env.JSON;\n        this.Map = env.Map;\n        this.Math = env.Math;\n        this.NaN = env.NaN;\n        this.Number = env.Number;\n        this.Object = env.Object;\n        this.Promise = env.Promise;\n        this.RangeError = env.RangeError;\n        this.ReferenceError = env.ReferenceError;\n        this.RegExp = env.RegExp;\n        this.Set = env.Set;\n        this.String = env.String;\n        this.Symbol = env.Symbol;\n        this.SyntaxError = env.SyntaxError;\n        this.TypeError = env.TypeError;\n        this.URIError = env.URIError;\n        this.Uint8Array = env.Uint8Array;\n        this.Uint8ClampedArray = env.Uint8ClampedArray;\n        this.Uint16Array = env.Uint16Array;\n        this.Uint32Array = env.Uint32Array;\n        this.WeakMap = env.WeakMap;\n        this.WeakSet = env.WeakSet;\n        this.clearImmediate = env.clearImmediate;\n        this.clearInterval = env.clearInterval;\n        this.clearTimeout = env.clearTimeout;\n        this.console = env.console;\n        this.decodeURI = env.decodeURI;\n        this.decodeURIComponent = env.decodeURIComponent;\n        this.encodeURI = env.encodeURI;\n        this.encodeURIComponent = env.encodeURIComponent;\n        this.escape = env.escape;\n        this.eval = env.eval;\n        this.gc = is_node_1.default ? env.gc : function () { };\n        this.global = this;\n        this.isFinite = env.isFinite;\n        this.isNaN = env.isNaN;\n        this.parseFloat = env.parseFloat;\n        this.parseInt = env.parseInt;\n        this.process = env.process;\n        this.queueMicrotask = env.queueMicrotask;\n        this.root = this;\n        this.setImmediate = env.setImmediate;\n        this.setInterval = env.setInterval;\n        this.setTimeout = env.setTimeout;\n        this.undefined = env.undefined;\n        this.unescape = env.unescape;\n        this.v8debug = env.v8debug;\n        if (is_node_1.default) {\n            var fs = require('fs');\n            var nodeCrypto_1 = require('crypto');\n            this.fs = fs;\n            this.crypto = {\n                getRandomValues: function (b) {\n                    nodeCrypto_1.randomFillSync(b);\n                },\n            };\n            this.performance = {\n                now: function () {\n                    var _a = process.hrtime(), sec = _a[0], nsec = _a[1];\n                    return sec * 1000 + nsec / 1000000;\n                },\n            };\n            var util = require('util');\n            this.encoder = new util.TextEncoder(encoding);\n            this.decoder = new util.TextDecoder(encoding);\n            var webStreams_1 = require('web-streams-polyfill/dist/ponyfill');\n            this['ReadableStream'] = webStreams_1.ReadableStream;\n            this['WritableStream'] = webStreams_1.WritableStream;\n            this['ByteLengthQueuingStrategy'] =\n                webStreams_1.ByteLengthQueuingStrategy;\n            this['CountQueuingStrategy'] = webStreams_1.CountQueuingStrategy;\n            this['TransformStream'] = webStreams_1.TransformStream;\n            var fetch_1 = require('cross-fetch/dist/node-ponyfill');\n            this['fetch'] = function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                return fetch_1.apply(void 0, args).then(function (res) {\n                    var body = res.body;\n                    body.getReader = function () {\n                        var stream = new webStreams_1.ReadableStream({\n                            start: function (controller) {\n                                res.body.on('data', function (chunk) {\n                                    controller.enqueue(chunk);\n                                });\n                                res.body.on('end', function () {\n                                    controller.close();\n                                });\n                                // res.body.on('close', () => {\n                                //     controller.close();\n                                // });\n                                res.body.on('error', function (err) {\n                                    controller.error(err);\n                                });\n                            },\n                        });\n                        return stream.getReader();\n                    };\n                    return res;\n                });\n            };\n            this['Headers'] = fetch_1.Headers;\n            this['Request'] = fetch_1.Request;\n            this['Response'] = fetch_1.Response;\n        }\n        else {\n            var outputBuf_1 = '';\n            var platform_1 = this;\n            this.fs = {\n                constants: {\n                    O_WRONLY: -1,\n                    O_RDWR: -1,\n                    O_CREAT: -1,\n                    O_TRUNC: -1,\n                    O_APPEND: -1,\n                    O_EXCL: -1,\n                },\n                writeSync: function (fd, buf) {\n                    outputBuf_1 += platform_1.decoder.decode(buf);\n                    var nl = outputBuf_1.lastIndexOf('\\n');\n                    if (nl != -1) {\n                        console.log(outputBuf_1.substr(0, nl));\n                        outputBuf_1 = outputBuf_1.substr(nl + 1);\n                    }\n                    return buf.length;\n                },\n                write: function (fd, buf, offset, length, position, callback) {\n                    if (offset !== 0 ||\n                        length !== buf.length ||\n                        position !== null) {\n                        throw new Error('not implemented');\n                    }\n                    var n = this.writeSync(fd, buf);\n                    callback(null, n);\n                },\n                open: function (path, flags, mode, callback) {\n                    var err = new Error('not implemented');\n                    err.code = 'ENOSYS';\n                    callback(err);\n                },\n                read: function (fd, buffer, offset, length, position, callback) {\n                    var err = new Error('not implemented');\n                    err.code = 'ENOSYS';\n                    callback(err);\n                },\n                fsync: function (fd, callback) {\n                    callback(null);\n                },\n            };\n            this.crypto = window.crypto;\n            this.performance = window.performance;\n            this.encoder = new window.TextEncoder(encoding);\n            this.decoder = new window.TextDecoder(encoding);\n            var obj = window;\n            do\n                Object.getOwnPropertyNames(obj).forEach(function (key) {\n                    // skip already defined keys\n                    if (_this[key] != null) {\n                        return;\n                    }\n                    var value = env[key];\n                    // skip leaking env object\n                    if (value === env) {\n                        return;\n                    }\n                    if (key[0].toLowerCase() === key[0]) {\n                        if (typeof value === 'function') {\n                            value = value.bind(env);\n                        }\n                    }\n                    _this[key] = value;\n                });\n            while (obj == Object.getPrototypeOf(obj));\n        }\n    }\n    return Platform;\n}());\nexports.Platform = Platform;\n"},"lineCount":210}},"error":null,"hash":"d7fd2ae192496e93a0b5170fe81831f9","cacheData":{"env":{}}}