{"id":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","dependencies":[{"name":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/package.json","includedInParent":true,"mtime":1560032204853},{"name":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/package.json","includedInParent":true,"mtime":1560032193347},{"name":"./program","loc":{"line":38,"column":24},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/engine.js","resolved":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/program.js"},{"name":"./compiler","loc":{"line":39,"column":25},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/engine.js","resolved":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/compiler.js"},{"name":"./helpers","loc":{"line":40,"column":24},"parent":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/engine.js","resolved":"/Users/timofei.voronov/Work/src/github.com/MontFerret/montferret.github.io/themes/ferret/node_modules/@montferret/ferret-wasm/dist/helpers.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar program_1 = require(\"./program\");\nvar compiler_1 = require(\"./compiler\");\nvar helpers_1 = require(\"./helpers\");\nvar Engine = /** @class */ (function () {\n    function Engine(go) {\n        this.__go = go;\n        this.__compiler = go.platform.ferret;\n        var res = this.__compiler.version();\n        this.__version = Object.freeze(res.ok\n            ? res.data\n            : {\n                self: 'undefined',\n                ferret: 'undefined',\n            });\n    }\n    Engine.prototype.version = function () {\n        return this.__version;\n    };\n    Engine.prototype.register = function (name, fn) {\n        var res = this.__compiler.register(name, fn);\n        helpers_1.assert(res);\n        if (!res.ok) {\n            throw new Error(res.error);\n        }\n    };\n    Engine.prototype.compile = function (query) {\n        var res = this.__compiler.compile(query);\n        helpers_1.assert(res);\n        if (!res.ok) {\n            throw new Error(res.error);\n        }\n        return new program_1.Program(this.__compiler, res.data);\n    };\n    Engine.prototype.exec = function (query, params) {\n        if (params === void 0) { params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        _this.__compiler.exec(query, params, compiler_1.createCallback(resolve, reject));\n                    })];\n            });\n        });\n    };\n    return Engine;\n}());\nexports.Engine = Engine;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/@montferret/ferret-wasm/dist/engine.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"../../node_modules/@montferret/ferret-wasm/dist/engine.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar program_1 = require(\"./program\");\nvar compiler_1 = require(\"./compiler\");\nvar helpers_1 = require(\"./helpers\");\nvar Engine = /** @class */ (function () {\n    function Engine(go) {\n        this.__go = go;\n        this.__compiler = go.platform.ferret;\n        var res = this.__compiler.version();\n        this.__version = Object.freeze(res.ok\n            ? res.data\n            : {\n                self: 'undefined',\n                ferret: 'undefined',\n            });\n    }\n    Engine.prototype.version = function () {\n        return this.__version;\n    };\n    Engine.prototype.register = function (name, fn) {\n        var res = this.__compiler.register(name, fn);\n        helpers_1.assert(res);\n        if (!res.ok) {\n            throw new Error(res.error);\n        }\n    };\n    Engine.prototype.compile = function (query) {\n        var res = this.__compiler.compile(query);\n        helpers_1.assert(res);\n        if (!res.ok) {\n            throw new Error(res.error);\n        }\n        return new program_1.Program(this.__compiler, res.data);\n    };\n    Engine.prototype.exec = function (query, params) {\n        if (params === void 0) { params = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        _this.__compiler.exec(query, params, compiler_1.createCallback(resolve, reject));\n                    })];\n            });\n        });\n    };\n    return Engine;\n}());\nexports.Engine = Engine;\n"},"lineCount":85}},"error":null,"hash":"3b28b89dc91e0a89529268869f134887","cacheData":{"env":{}}}