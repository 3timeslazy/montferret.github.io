<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ferret</title>
    <link>https://www.montferret.dev/</link>
    <description>Recent content on Ferret</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://www.montferret.dev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction</title>
      <link>https://www.montferret.dev/docs/fql/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.montferret.dev/docs/fql/introduction/</guid>
      <description>What is Ferret Query Language? The Ferret Query Language (FQL) is heavily inspired by the ArangoDB Query Language (AQL) and used as a starting point. But due to the domain specifics, there are some differences in how things work and future lagnuage changes are expected.
Even though, FQL is used to read data from the websites, it&amp;rsquo;s considered as a general purpose query language. That means that all web related functionality is implemented as functions from the FQL Standard Library.</description>
    </item>
    
    <item>
      <title>Overview</title>
      <link>https://www.montferret.dev/docs/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.montferret.dev/docs/overview/</guid>
      <description>What is Ferret? Ferret project is an ambitious initiative trying to bring the universal platform for writing scrapers without any hassle. It aims to simplify data extraction from the web for UI testing, machine learning, analytics and more.
Ferret allows you to focus on the data by abstracting away the technical details and complexity of underlying technologies using its own declarative language.
Ferret is extremely portable, extensible and fast.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>https://www.montferret.dev/docs/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.montferret.dev/docs/installation/</guid>
      <description>Installation Even though, Ferret comes as a CLI executable, it also can be used as a library.
CLI From binary You can download latest binaries from here.
From the source go get github.com/MontFerret/ferret Library go get github.com/MontFerret/ferret/pkg/compiler Environment In order to use all Ferret features, you will need to have Chrome either installed locally or running in Docker. For ease of use we recommend to run Chrome inside a Docker container:</description>
    </item>
    
    <item>
      <title>Syntax</title>
      <link>https://www.montferret.dev/docs/fql/syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.montferret.dev/docs/fql/syntax/</guid>
      <description>Syntax Query types An FQL query must return a result indicated by usage either of the RETURN or FOR IN keywords. The FQL parser will return an error if it cannot find any of these two statements.
Whitespace Whitespaces (blanks, carriage returns, line feeds, and tab stops) can be used in the query text to increase its readability. Tokens have to be separated by any number of whitespaces. Whitespace within strings or names must be enclosed in quotes in order to be preserved.</description>
    </item>
    
    <item>
      <title>Data types</title>
      <link>https://www.montferret.dev/docs/fql/data-types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.montferret.dev/docs/fql/data-types/</guid>
      <description>Data types FQL supports both primitive data types consisting of exactly one value and compound data types comprised of multiple values. The following types are available:
  Data type Description     none An empty value, also: the absence of a value   boolean Boolean truth value with possible values false and true   integer Signed whole number   float Signed floating point number   string UTF-8 encoded text value   array Sequence of values, referred to by their positions   object Sequence of values, referred to by their names   binary Sequence of binary values   custom User defined types    Primitive types None value A none value can be used to represent an empty or absent value.</description>
    </item>
    
    <item>
      <title>Getting started</title>
      <link>https://www.montferret.dev/docs/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.montferret.dev/docs/getting-started/</guid>
      <description>Quick start Browserless mode If you want to play with FQL and check its syntax, you can run CLI with the following commands to run Ferret CLI in REPL mode:
ferret Welcome to Ferret REPL Please use `Ctrl-D` to exit this program. &amp;gt;% &amp;gt;LET doc = DOCUMENT(&amp;#39;https://news.ycombinator.com/&amp;#39;) &amp;gt;FOR post IN ELEMENTS(doc, &amp;#39;.storylink&amp;#39;) &amp;gt;RETURN post.attributes.href &amp;gt;% NOTE: symbol % is used to start and end multi-line queries. You also can use the heredoc format.</description>
    </item>
    
    <item>
      <title>Bind parameters</title>
      <link>https://www.montferret.dev/docs/fql/bind-parameters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.montferret.dev/docs/fql/bind-parameters/</guid>
      <description>Bind parameters FQL supports the usage of bind parameters, thus allowing to separate the query text from literal values used in the query. It is good practice to separate the query text from the literal values because it allows to reuse same query in different scenarios.
Using bind parameters, the meaning of an existing query cannot be changed. Bind parameters can be used everywhere in a query where literals can be used.</description>
    </item>
    
    <item>
      <title>Type and value order</title>
      <link>https://www.montferret.dev/docs/fql/type-value-order/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.montferret.dev/docs/fql/type-value-order/</guid>
      <description>Type and value order When checking for equality or inequality or when determining the sort order of values, FQL uses a deterministic algorithm that takes both the data types and the actual values into account.
The compared operands are first compared by their data types, and only by their data values if the operands have the same data types.
The following type order is used when comparing data types:</description>
    </item>
    
  </channel>
</rss>